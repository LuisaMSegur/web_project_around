!function(){"use strict";function e(t){return e="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&"function"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?"symbol":typeof e},e(t)}function t(e,t){for(var r=0;r<t.length;r++){var o=t[r];o.enumerable=o.enumerable||!1,o.configurable=!0,"value"in o&&(o.writable=!0),Object.defineProperty(e,n(o.key),o)}}function n(t){var n=function(t){if("object"!=e(t)||!t)return t;var n=t[Symbol.toPrimitive];if(void 0!==n){var r=n.call(t,"string");if("object"!=e(r))return r;throw new TypeError("@@toPrimitive must return a primitive value.")}return String(t)}(t);return"symbol"==e(n)?n:n+""}var r=document.querySelector("#card-template").content,o=function(){return e=function e(t){var n=t.data,r=t.handleClickImage,o=t.handleClickDelete,i=t.handleLikes,u=t.userId;!function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,e),this.name=n.name,this.link=n.link,this.owner=n.owner,this.likes=n.likes||[],this.isLiked=this.isLikedByUser(),this.id=n._id,this.userId=u,this.handleClickImage=r,this.handleClickDelete=o,this.handleLikes=i,this.setProperties()},(n=[{key:"getTemplate",value:function(){return r.querySelector(".card").cloneNode(!0)}},{key:"setProperties",value:function(){this.htmlCard=this.getTemplate(),this.cardImage=this.htmlCard.querySelector(".card__photo"),this.cardTitle=this.htmlCard.querySelector(".card__name-place"),this.buttonLikeCard=this.htmlCard.querySelector(".card__button-love"),this.buttonDeleteCard=this.htmlCard.querySelector(".card__button-trash"),this.counterLikes=this.htmlCard.querySelector(".card__like"),this.cardTitle.textContent=this.name,this.cardImage.src=this.link,this.counterLikes.textContent=this.likes.length,this.updateLikeButton(),this.owner._id===this.userId?this.buttonDeleteCard.style.display="block":this.buttonDeleteCard.style.display="none"}},{key:"isLikedByUser",value:function(){var e=this;return this.likes.some((function(t){return t._id===e.userId}))}},{key:"toggleLike",value:function(e){this.likes=e,this.isLiked=this.isLikedByUser(),this.counterLikes.textContent=e.length,this.updateLikeButton()}},{key:"updateLikeButton",value:function(){this.isLiked=this.isLikedByUser(),this.buttonLikeCard.classList.toggle("card__button-love_active",this.isLiked)}},{key:"removeCard",value:function(){this.htmlCard.remove()}},{key:"setEventListeners",value:function(){var e=this;this.cardImage.addEventListener("click",(function(){e.handleClickImage()})),this.buttonDeleteCard.addEventListener("click",(function(){e.handleClickDelete(e.id)})),this.buttonLikeCard.addEventListener("click",(function(){e.handleLikes(e.id,e.isLiked).then((function(t){e.toggleLike(t.likes)})).catch((function(e){return console.error("Error al hacer toggleLike:",e)}))}))}},{key:"closeOnEsc",value:function(e){"Escape"===e.key&&this.closePopUpImage()}},{key:"closeClickOutForm",value:function(e,t){t.target===e&&this.closePopUpImage()}},{key:"openPopUpImage",value:function(){var e=this,t=document.querySelector("#popup-image"),n=t.querySelector(".popup__photo"),r=t.querySelector(".popup__photo-title");t.classList.add("popup_open"),r.textContent=this.name,n.src=this.link,document.addEventListener("keydown",this.closeOnEsc.bind(this)),document.addEventListener("click",(function(n){return e.closeClickOutForm(t,n)}))}},{key:"closePopUpImage",value:function(){document.querySelector("#popup-image").classList.remove("popup_open"),document.removeEventListener("keydown",this.closeOnEsc.bind(this))}},{key:"setCard",value:function(){return this.setProperties(),this.setEventListeners(),this.htmlCard}}])&&t(e.prototype,n),Object.defineProperty(e,"prototype",{writable:!1}),e;var e,n}();function i(e){return i="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&"function"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?"symbol":typeof e},i(e)}function u(e,t){for(var n=0;n<t.length;n++){var r=t[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(e,c(r.key),r)}}function c(e){var t=function(e){if("object"!=i(e)||!e)return e;var t=e[Symbol.toPrimitive];if(void 0!==t){var n=t.call(e,"string");if("object"!=i(n))return n;throw new TypeError("@@toPrimitive must return a primitive value.")}return String(e)}(e);return"symbol"==i(t)?t:t+""}var a=function(){return e=function e(t,n){!function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,e),this.formElement=t,this.settings=n,this.inputList=Array.from(this.formElement.querySelectorAll(this.settings.inputSelector)),this.buttonElement=this.formElement.querySelector(this.settings.submitButtonSelector)},(t=[{key:"showInputError",value:function(e,t){var n=this.formElement.querySelector("#".concat(e.id,"-error"));e.classList.add(this.settings.inputErrorClass),n.textContent=t,n.classList.add(this.settings.errorClass)}},{key:"hideInputError",value:function(e){var t=this.formElement.querySelector("#".concat(e.id,"-error"));e.classList.remove(this.settings.inputErrorClass),t.textContent="",t.classList.remove(this.settings.errorClass)}},{key:"checkInputValidity",value:function(e){e.validity.valid?this.hideInputError(e):this.showInputError(e,e.validationMessage)}},{key:"hasInvalidInput",value:function(){return this.inputList.some((function(e){return!e.validity.valid}))}},{key:"toggleButtonState",value:function(){this.hasInvalidInput()?(this.buttonElement.disabled=!0,this.buttonElement.classList.add(this.settings.inactiveButtonClass)):(this.buttonElement.disabled=!1,this.buttonElement.classList.remove(this.settings.inactiveButtonClass))}},{key:"setEventListeners",value:function(){var e=this;this.toggleButtonState(),this.inputList.forEach((function(t){t.addEventListener("input",(function(){e.checkInputValidity(t),e.toggleButtonState()}))}))}},{key:"enableValidation",value:function(){this.formElement.addEventListener("submit",(function(e){e.preventDefault()})),this.setEventListeners()}}])&&u(e.prototype,t),Object.defineProperty(e,"prototype",{writable:!1}),e;var e,t}(),s={formSelector:".form",inputSelector:".form__input",submitButtonSelector:".form__submit",inactiveButtonClass:"form__submit_disabled",inputErrorClass:"form__input_type_error",errorClass:"form__error_visible"},l=document.querySelector("#form-profile"),f=document.querySelector(".profile__title"),p=document.querySelector(".profile__subtitle"),y=document.querySelector("#avatar"),h=document.querySelector("#form-avatar"),d=document.querySelector("#form-card"),m=document.querySelector(".profile__button"),b=document.querySelector(".profile__button-add"),v=document.querySelector(".profile__photo_edit");function k(e){return k="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&"function"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?"symbol":typeof e},k(e)}function g(e,t){for(var n=0;n<t.length;n++){var r=t[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(e,E(r.key),r)}}function E(e){var t=function(e){if("object"!=k(e)||!e)return e;var t=e[Symbol.toPrimitive];if(void 0!==t){var n=t.call(e,"string");if("object"!=k(n))return n;throw new TypeError("@@toPrimitive must return a primitive value.")}return String(e)}(e);return"symbol"==k(t)?t:t+""}var S=function(){return e=function e(t){!function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,e),this.popupElement=document.querySelector(t),this.closeButton=this.popupElement.querySelector(".popup__close"),this._handleEsClose=this._handleEsClose.bind(this)},(t=[{key:"openPopup",value:function(){this.popupElement.classList.add("popup_open"),document.addEventListener("keydown",this._handleEsClose)}},{key:"closePopup",value:function(){this.popupElement.classList.remove("popup_open"),document.removeEventListener("keydown",this._handleEsClose)}},{key:"_handleEsClose",value:function(e){"Escape"===e.key&&this.closePopup()}},{key:"handleClickOutside",value:function(e){return e.target.classList.contains("popup_open")}},{key:"setEventListeners",value:function(){var e=this;this.closeButton.addEventListener("click",(function(){e.closePopup()})),this.popupElement.addEventListener("click",(function(t){e.handleClickOutside(t)&&e.closePopup()}))}}])&&g(e.prototype,t),Object.defineProperty(e,"prototype",{writable:!1}),e;var e,t}();function w(e){return w="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&"function"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?"symbol":typeof e},w(e)}function P(e,t){for(var n=0;n<t.length;n++){var r=t[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(e,j(r.key),r)}}function j(e){var t=function(e){if("object"!=w(e)||!e)return e;var t=e[Symbol.toPrimitive];if(void 0!==t){var n=t.call(e,"string");if("object"!=w(n))return n;throw new TypeError("@@toPrimitive must return a primitive value.")}return String(e)}(e);return"symbol"==w(t)?t:t+""}function O(){try{var e=!Boolean.prototype.valueOf.call(Reflect.construct(Boolean,[],(function(){})))}catch(e){}return(O=function(){return!!e})()}function C(e,t,n,r){var o=_(L(1&r?e.prototype:e),t,n);return 2&r&&"function"==typeof o?function(e){return o.apply(n,e)}:o}function _(){return _="undefined"!=typeof Reflect&&Reflect.get?Reflect.get.bind():function(e,t,n){var r=function(e,t){for(;!{}.hasOwnProperty.call(e,t)&&null!==(e=L(e)););return e}(e,t);if(r){var o=Object.getOwnPropertyDescriptor(r,t);return o.get?o.get.call(arguments.length<3?e:n):o.value}},_.apply(null,arguments)}function L(e){return L=Object.setPrototypeOf?Object.getPrototypeOf.bind():function(e){return e.__proto__||Object.getPrototypeOf(e)},L(e)}function I(e,t){return I=Object.setPrototypeOf?Object.setPrototypeOf.bind():function(e,t){return e.__proto__=t,e},I(e,t)}var T=function(e){function t(e,n){var r;return function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,t),(r=function(e,t,n){return t=L(t),function(e,t){if(t&&("object"==w(t)||"function"==typeof t))return t;if(void 0!==t)throw new TypeError("Derived constructors may only return object or undefined");return function(e){if(void 0===e)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return e}(e)}(e,O()?Reflect.construct(t,n||[],L(e).constructor):t.apply(e,n))}(this,t,[e])).formElement=r.popupElement.querySelector(".form"),r.inputList=r.formElement.querySelectorAll(".form__input"),r.handleFormSubmit=n,r.buttonSubmit=r.formElement.querySelector(".form__submit"),r}return function(e,t){if("function"!=typeof t&&null!==t)throw new TypeError("Super expression must either be null or a function");e.prototype=Object.create(t&&t.prototype,{constructor:{value:e,writable:!0,configurable:!0}}),Object.defineProperty(e,"prototype",{writable:!1}),t&&I(e,t)}(t,e),n=t,(r=[{key:"getInputValues",value:function(){var e=this;return this.formValues={},this.inputList.forEach((function(t){e.formValues[t.name]=t.value})),this.formValues}},{key:"setEventListeners",value:function(){var e=this;C(t,"setEventListeners",this,3)([]),this.formElement.addEventListener("submit",(function(t){t.preventDefault(),e.handleFormSubmit(e.getInputValues()),e.closePopup()})),this.buttonSubmit.addEventListener("click",(function(){e.buttonSubmit.textContent="Cargando..."}))}},{key:"closePopup",value:function(){C(t,"closePopup",this,3)([]),this.formElement.reset()}}])&&P(n.prototype,r),Object.defineProperty(n,"prototype",{writable:!1}),n;var n,r}(S);function q(e){return q="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&"function"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?"symbol":typeof e},q(e)}function U(e,t){for(var n=0;n<t.length;n++){var r=t[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(e,B(r.key),r)}}function B(e){var t=function(e){if("object"!=q(e)||!e)return e;var t=e[Symbol.toPrimitive];if(void 0!==t){var n=t.call(e,"string");if("object"!=q(n))return n;throw new TypeError("@@toPrimitive must return a primitive value.")}return String(e)}(e);return"symbol"==q(t)?t:t+""}function D(){try{var e=!Boolean.prototype.valueOf.call(Reflect.construct(Boolean,[],(function(){})))}catch(e){}return(D=function(){return!!e})()}function R(){return R="undefined"!=typeof Reflect&&Reflect.get?Reflect.get.bind():function(e,t,n){var r=function(e,t){for(;!{}.hasOwnProperty.call(e,t)&&null!==(e=x(e)););return e}(e,t);if(r){var o=Object.getOwnPropertyDescriptor(r,t);return o.get?o.get.call(arguments.length<3?e:n):o.value}},R.apply(null,arguments)}function x(e){return x=Object.setPrototypeOf?Object.getPrototypeOf.bind():function(e){return e.__proto__||Object.getPrototypeOf(e)},x(e)}function A(e,t){return A=Object.setPrototypeOf?Object.setPrototypeOf.bind():function(e,t){return e.__proto__=t,e},A(e,t)}var V=function(e){function t(e){var n;return function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,t),(n=function(e,t,n){return t=x(t),function(e,t){if(t&&("object"==q(t)||"function"==typeof t))return t;if(void 0!==t)throw new TypeError("Derived constructors may only return object or undefined");return function(e){if(void 0===e)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return e}(e)}(e,D()?Reflect.construct(t,n||[],x(e).constructor):t.apply(e,n))}(this,t,[e])).imageElement=n.popupElement.querySelector(".popup__photo"),n.titleElement=n.popupElement.querySelector(".popup__photo-title"),n}return function(e,t){if("function"!=typeof t&&null!==t)throw new TypeError("Super expression must either be null or a function");e.prototype=Object.create(t&&t.prototype,{constructor:{value:e,writable:!0,configurable:!0}}),Object.defineProperty(e,"prototype",{writable:!1}),t&&A(e,t)}(t,e),n=t,r=[{key:"openPopup",value:function(e,n){var r,o,i;(r=t,o=this,"function"==typeof(i=R(x(1&3?r.prototype:r),"openPopup",o))?function(e){return i.apply(o,e)}:i)([]),this.titleElement.textContent=e,this.imageElement.src=n}}],r&&U(n.prototype,r),Object.defineProperty(n,"prototype",{writable:!1}),n;var n,r}(S);function F(e){return F="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&"function"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?"symbol":typeof e},F(e)}function N(e,t){for(var n=0;n<t.length;n++){var r=t[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(e,J(r.key),r)}}function J(e){var t=function(e){if("object"!=F(e)||!e)return e;var t=e[Symbol.toPrimitive];if(void 0!==t){var n=t.call(e,"string");if("object"!=F(n))return n;throw new TypeError("@@toPrimitive must return a primitive value.")}return String(e)}(e);return"symbol"==F(t)?t:t+""}var G=function(){return e=function e(t){var n=t.name,r=t.about,o=t.avatar;!function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,e),this.name=n,this.about=r,this.avatar=o,this.userId=null},(t=[{key:"getUserInfo",value:function(){return{name:this.name.textContent,about:this.about.textContent,avatar:this.avatar.src,userId:this.userId}}},{key:"setUserInfo",value:function(e,t,n){this.name.textContent=e,this.about.textContent=t,this.userId=n}},{key:"setUserAvatar",value:function(e){this.avatar.src=e}}])&&N(e.prototype,t),Object.defineProperty(e,"prototype",{writable:!1}),e;var e,t}();function H(e){return H="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&"function"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?"symbol":typeof e},H(e)}function z(e,t){for(var n=0;n<t.length;n++){var r=t[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(e,M(r.key),r)}}function M(e){var t=function(e){if("object"!=H(e)||!e)return e;var t=e[Symbol.toPrimitive];if(void 0!==t){var n=t.call(e,"string");if("object"!=H(n))return n;throw new TypeError("@@toPrimitive must return a primitive value.")}return String(e)}(e);return"symbol"==H(t)?t:t+""}var K=function(){return e=function e(t,n){var r=t.items,o=t.renderer;!function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,e),this.items=Array.isArray(r)?r:[],this.renderer=o,this.container=document.querySelector(n)},(t=[{key:"renderItems",value:function(){var e=this;this.items.forEach((function(t){e.renderer(t)}))}},{key:"addCard",value:function(e){this.container.append(e)}}])&&z(e.prototype,t),Object.defineProperty(e,"prototype",{writable:!1}),e;var e,t}();function Q(e){return Q="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&"function"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?"symbol":typeof e},Q(e)}function W(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function X(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?W(Object(n),!0).forEach((function(t){Y(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):W(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function Y(e,t,n){return(t=$(t))in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function Z(e,t){for(var n=0;n<t.length;n++){var r=t[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(e,$(r.key),r)}}function $(e){var t=function(e){if("object"!=Q(e)||!e)return e;var t=e[Symbol.toPrimitive];if(void 0!==t){var n=t.call(e,"string");if("object"!=Q(n))return n;throw new TypeError("@@toPrimitive must return a primitive value.")}return String(e)}(e);return"symbol"==Q(t)?t:t+""}var ee=new(function(){return e=function e(t,n){!function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,e),this.baseUrl=t,this.headers=n},(t=[{key:"getUser",value:function(){return fetch("".concat(this.baseUrl,"/users/me"),{method:"GET",headers:this.headers}).then((function(e){return e.ok?e.json():Promise.reject("error en la petición")}))}},{key:"editUser",value:function(e,t){return fetch("".concat(this.baseUrl,"/users/me"),{method:"PATCH",headers:X({"Content-Type":"application/json"},this.headers),body:JSON.stringify({name:e,about:t})}).then((function(e){return e.ok?e.json():Promise.reject("error en la petición")}))}},{key:"editAvatar",value:function(e){return fetch("".concat(this.baseUrl,"/users/me/avatar"),{method:"PATCH",headers:X({"Content-Type":"application/json"},this.headers),body:JSON.stringify({avatar:e})}).then((function(e){return e.ok?e.json():Promise.reject("error en la petición")}))}},{key:"getCards",value:function(){return fetch("".concat(this.baseUrl,"/cards"),{method:"GET",headers:this.headers}).then((function(e){return e.ok?e.json():Promise.reject("error en la petición")}))}},{key:"createCard",value:function(e,t){return fetch("".concat(this.baseUrl,"/cards"),{method:"POST",headers:X(X({},this.headers),{},{"Content-Type":"application/json"}),body:JSON.stringify({name:e,link:t})}).then((function(e){return e.ok?e.json():Promise.reject("error en la petición")}))}},{key:"deleteCard",value:function(e){return fetch("".concat(this.baseUrl,"/cards/").concat(e),{method:"DELETE",headers:this.headers}).then((function(e){return e.ok?e.json():Promise.reject("error en la petición")}))}},{key:"likeCard",value:function(e){return fetch("".concat(this.baseUrl,"/cards/likes/").concat(e),{method:"PUT",headers:this.headers}).then((function(e){return e.ok?e.json():Promise.reject("error en la petición")}))}},{key:"dislikeCard",value:function(e){return fetch("".concat(this.baseUrl,"/cards/likes/").concat(e),{method:"DELETE",headers:this.headers}).then((function(e){return e.ok?e.json():Promise.reject("error en la petición")}))}},{key:"toggleLike",value:function(e,t){return t?this.dislikeCard(e):this.likeCard(e)}}])&&Z(e.prototype,t),Object.defineProperty(e,"prototype",{writable:!1}),e;var e,t}())("https://around.nomoreparties.co/v1/web-es-cohort-16",{authorization:"8a4f71dd-3b26-4bfa-a79c-46527c68df13"});function te(e){return te="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&"function"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?"symbol":typeof e},te(e)}function ne(e,t){for(var n=0;n<t.length;n++){var r=t[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(e,re(r.key),r)}}function re(e){var t=function(e){if("object"!=te(e)||!e)return e;var t=e[Symbol.toPrimitive];if(void 0!==t){var n=t.call(e,"string");if("object"!=te(n))return n;throw new TypeError("@@toPrimitive must return a primitive value.")}return String(e)}(e);return"symbol"==te(t)?t:t+""}function oe(){try{var e=!Boolean.prototype.valueOf.call(Reflect.construct(Boolean,[],(function(){})))}catch(e){}return(oe=function(){return!!e})()}function ie(){return ie="undefined"!=typeof Reflect&&Reflect.get?Reflect.get.bind():function(e,t,n){var r=function(e,t){for(;!{}.hasOwnProperty.call(e,t)&&null!==(e=ue(e)););return e}(e,t);if(r){var o=Object.getOwnPropertyDescriptor(r,t);return o.get?o.get.call(arguments.length<3?e:n):o.value}},ie.apply(null,arguments)}function ue(e){return ue=Object.setPrototypeOf?Object.getPrototypeOf.bind():function(e){return e.__proto__||Object.getPrototypeOf(e)},ue(e)}function ce(e,t){return ce=Object.setPrototypeOf?Object.setPrototypeOf.bind():function(e,t){return e.__proto__=t,e},ce(e,t)}var ae=function(e){function t(e){var n;return function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,t),(n=function(e,t,n){return t=ue(t),function(e,t){if(t&&("object"==te(t)||"function"==typeof t))return t;if(void 0!==t)throw new TypeError("Derived constructors may only return object or undefined");return function(e){if(void 0===e)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return e}(e)}(e,oe()?Reflect.construct(t,n||[],ue(e).constructor):t.apply(e,n))}(this,t,[e])).action=function(){},n}return function(e,t){if("function"!=typeof t&&null!==t)throw new TypeError("Super expression must either be null or a function");e.prototype=Object.create(t&&t.prototype,{constructor:{value:e,writable:!0,configurable:!0}}),Object.defineProperty(e,"prototype",{writable:!1}),t&&ce(e,t)}(t,e),n=t,r=[{key:"setAction",value:function(e){this.action=e}},{key:"setEventListeners",value:function(){var e,n,r,o=this;(e=t,n=this,"function"==typeof(r=ie(ue(1&3?e.prototype:e),"setEventListeners",n))?function(e){return r.apply(n,e)}:r)([]);var i=this.popupElement.querySelector("#buttonConfirmation");i?i.addEventListener("click",(function(){o.action()})):console.error("El botón de confirmación no se encontró en el popup.")}}],r&&ne(n.prototype,r),Object.defineProperty(n,"prototype",{writable:!1}),n;var n,r}(S),se=new G({name:f,about:p,avatar:y});ee.getUser().then((function(e){se.setUserInfo(e.name,e.about,e._id),se.setUserAvatar(e.avatar)})).catch((function(e){console.log(e)}));var le=new T("#popup-profile",(function(e){ee.editUser(e.name,e.about).then((function(e){se.setUserInfo(e.name,e.about)})).catch((function(e){console.log(e)}))}));le.setEventListeners(),m.addEventListener("click",(function(){le.openPopup()}));var fe=new T("#popup-avatar",(function(e){ee.editAvatar(e.avatar).then((function(e){se.setUserAvatar(e.avatar)})).catch((function(e){console.log(e)}))}));fe.setEventListeners(),v.addEventListener("click",(function(){fe.openPopup()})),ee.getCards().then((function(e){pe.items=e,pe.renderItems()})).catch((function(e){console.log(e)}));var pe=new K({items:[],renderer:function(e){var t=new o({data:e,handleClickImage:function(){de.openPopup({name:e.name,link:e.link})},handleClickDelete:function(e){he.openPopup(),he.setAction((function(){ee.deleteCard(e).then((function(){t.removeCard(),he.closePopup()}))}))},handleLikes:function(e,n){return ee.toggleLike(e,n).then((function(e){return t.toggleLike(e.likes),e}))},userId:se.userId});pe.addCard(t.setCard())}},".cards"),ye=new T("#popup-card",(function(e){ee.createCard(e.title,e.link).then((function(e){var t=new o({data:e,handleClickImage:function(){de.openPopup(e.name,e.link)},handleClickDelete:function(e){he.openPopup(),he.setAction((function(){ee.deleteCard(e).then((function(){t.removeCard(),he.closePopup()}))}))},handleLikes:function(e,n){return ee.toggleLike(e,n).then((function(e){return t.toggleLike(e.likes),e}))},userId:se.userId});pe.addCard(t.setCard()),ye.closePopup()})).catch((function(){return console.log("error al crear carta")}))})),he=new ae("#popup-deleteCard");he.setEventListeners(),ye.setEventListeners(),b.addEventListener("click",(function(){ye.openPopup()}));var de=new V("#popup-image");de.setEventListeners();var me=new a(l,s),be=new a(d,s),ve=new a(h,s);me.enableValidation(),be.enableValidation(),ve.enableValidation()}();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,