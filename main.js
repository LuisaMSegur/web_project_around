!function(){"use strict";function t(e){return t="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(t){return typeof t}:function(t){return t&&"function"==typeof Symbol&&t.constructor===Symbol&&t!==Symbol.prototype?"symbol":typeof t},t(e)}function e(t,e){for(var r=0;r<e.length;r++){var o=e[r];o.enumerable=o.enumerable||!1,o.configurable=!0,"value"in o&&(o.writable=!0),Object.defineProperty(t,n(o.key),o)}}function n(e){var n=function(e){if("object"!=t(e)||!e)return e;var n=e[Symbol.toPrimitive];if(void 0!==n){var r=n.call(e,"string");if("object"!=t(r))return r;throw new TypeError("@@toPrimitive must return a primitive value.")}return String(e)}(e);return"symbol"==t(n)?n:n+""}var r=document.querySelector("#card-template").content,o=function(){return t=function t(e,n,r,o,i){!function(t,e){if(!(t instanceof e))throw new TypeError("Cannot call a class as a function")}(this,t),this.name=e.name,this.link=e.link,this._id=e._id,this.likes=Array.isArray(e.likes)?e.likes:[],this.userId=i,this.handleClickImage=n,this.handleClickDelete=r,this.handleLikeUpdate=o,this.setProperties()},(n=[{key:"getTemplate",value:function(){return r.querySelector(".card").cloneNode(!0)}},{key:"setProperties",value:function(){this.htmlCard=this.getTemplate(),this.cardImage=this.htmlCard.querySelector(".card__photo"),this.cardTitle=this.htmlCard.querySelector(".card__name-place"),this.buttonLikeCard=this.htmlCard.querySelector(".card__button-love"),this.buttonDeleteCard=this.htmlCard.querySelector(".card__button-trash"),this.cardLikes=this.htmlCard.querySelector(".card__like"),this.cardTitle.textContent=this.name,this.cardImage.src=this.link,this.showLikes()}},{key:"showLikes",value:function(){this.cardLikes.textContent=this.likes.length,this.buttonLikeCard.classList.toggle("card__button-love_active",this.likes.includes(this.userId))}},{key:"handleLikes",value:function(){var t=this;this.likes.includes(this.userId)?(this.likes=this.likes.filter((function(e){return e!==t.userId})),this.handleLikeUpdate(this._id,!1)):(this.likes.push(this.userId),this.handleLikeUpdate(this._id,!0)),this.showLikes()}},{key:"removeCard",value:function(){this.htmlCard.remove()}},{key:"setEventListeners",value:function(){var t=this;this.cardImage.addEventListener("click",(function(){t.handleClickImage()})),this.buttonDeleteCard.addEventListener("click",(function(){t.handleClickDelete(t._id)})),this.buttonLikeCard.addEventListener("click",(function(){t.handleLikes()}))}},{key:"closeOnEsc",value:function(t){"Escape"===t.key&&this.closePopUpImage()}},{key:"closeClickOutForm",value:function(t,e){e.target===t&&this.closePopUpImage()}},{key:"openPopUpImage",value:function(){var t=this,e=document.querySelector("#popup-image"),n=e.querySelector(".popup__photo"),r=e.querySelector(".popup__photo-title");e.classList.add("popup_open"),r.textContent=this.name,n.src=this.link,document.addEventListener("keydown",this.closeOnEsc.bind(this)),document.addEventListener("click",(function(n){return t.closeClickOutForm(e,n)}))}},{key:"closePopUpImage",value:function(){document.querySelector("#popup-image").classList.remove("popup_open"),document.removeEventListener("keydown",this.closeOnEsc.bind(this))}},{key:"setCard",value:function(){return this.setProperties(),this.setEventListeners(),this.htmlCard}}])&&e(t.prototype,n),Object.defineProperty(t,"prototype",{writable:!1}),t;var t,n}();function i(t){return i="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(t){return typeof t}:function(t){return t&&"function"==typeof Symbol&&t.constructor===Symbol&&t!==Symbol.prototype?"symbol":typeof t},i(t)}function u(t,e){for(var n=0;n<e.length;n++){var r=e[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(t,c(r.key),r)}}function c(t){var e=function(t){if("object"!=i(t)||!t)return t;var e=t[Symbol.toPrimitive];if(void 0!==e){var n=e.call(t,"string");if("object"!=i(n))return n;throw new TypeError("@@toPrimitive must return a primitive value.")}return String(t)}(t);return"symbol"==i(e)?e:e+""}var a=function(){return t=function t(e,n){!function(t,e){if(!(t instanceof e))throw new TypeError("Cannot call a class as a function")}(this,t),this.formElement=e,this.settings=n,this.inputList=Array.from(this.formElement.querySelectorAll(this.settings.inputSelector)),this.buttonElement=this.formElement.querySelector(this.settings.submitButtonSelector)},(e=[{key:"showInputError",value:function(t,e){var n=this.formElement.querySelector("#".concat(t.id,"-error"));t.classList.add(this.settings.inputErrorClass),n.textContent=e,n.classList.add(this.settings.errorClass)}},{key:"hideInputError",value:function(t){var e=this.formElement.querySelector("#".concat(t.id,"-error"));t.classList.remove(this.settings.inputErrorClass),e.textContent="",e.classList.remove(this.settings.errorClass)}},{key:"checkInputValidity",value:function(t){t.validity.valid?this.hideInputError(t):this.showInputError(t,t.validationMessage)}},{key:"hasInvalidInput",value:function(){return this.inputList.some((function(t){return!t.validity.valid}))}},{key:"toggleButtonState",value:function(){this.hasInvalidInput()?(this.buttonElement.disabled=!0,this.buttonElement.classList.add(this.settings.inactiveButtonClass)):(this.buttonElement.disabled=!1,this.buttonElement.classList.remove(this.settings.inactiveButtonClass))}},{key:"setEventListeners",value:function(){var t=this;this.toggleButtonState(),this.inputList.forEach((function(e){e.addEventListener("input",(function(){t.checkInputValidity(e),t.toggleButtonState()}))}))}},{key:"enableValidation",value:function(){this.formElement.addEventListener("submit",(function(t){t.preventDefault()})),this.setEventListeners()}}])&&u(t.prototype,e),Object.defineProperty(t,"prototype",{writable:!1}),t;var t,e}(),s={formSelector:".form",inputSelector:".form__input",submitButtonSelector:".form__submit",inactiveButtonClass:"form__submit_disabled",inputErrorClass:"form__input_type_error",errorClass:"form__error_visible"},l=document.querySelector("#form-profile"),f=document.querySelector(".profile__title"),p=document.querySelector(".profile__subtitle"),y=document.querySelector("#avatar"),h=document.querySelector("#form-avatar"),m=document.querySelector("#form-card"),d=document.querySelector(".profile__button"),v=document.querySelector(".profile__button-add"),b=document.querySelector(".profile__photo_edit");function k(t){return k="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(t){return typeof t}:function(t){return t&&"function"==typeof Symbol&&t.constructor===Symbol&&t!==Symbol.prototype?"symbol":typeof t},k(t)}function E(t,e){for(var n=0;n<e.length;n++){var r=e[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(t,S(r.key),r)}}function S(t){var e=function(t){if("object"!=k(t)||!t)return t;var e=t[Symbol.toPrimitive];if(void 0!==e){var n=e.call(t,"string");if("object"!=k(n))return n;throw new TypeError("@@toPrimitive must return a primitive value.")}return String(t)}(t);return"symbol"==k(e)?e:e+""}var g=function(){return t=function t(e){!function(t,e){if(!(t instanceof e))throw new TypeError("Cannot call a class as a function")}(this,t),this.popupElement=document.querySelector(e),this.closeButton=this.popupElement.querySelector(".popup__close"),this._handleEsClose=this._handleEsClose.bind(this)},(e=[{key:"openPopup",value:function(){this.popupElement.classList.add("popup_open"),document.addEventListener("keydown",this._handleEsClose)}},{key:"closePopup",value:function(){this.popupElement.classList.remove("popup_open"),document.removeEventListener("keydown",this._handleEsClose)}},{key:"_handleEsClose",value:function(t){"Escape"===t.key&&this.closePopup()}},{key:"handleClickOutside",value:function(t){return t.target.classList.contains("popup_open")}},{key:"setEventListeners",value:function(){var t=this;this.closeButton.addEventListener("click",(function(){t.closePopup()})),this.popupElement.addEventListener("click",(function(e){t.handleClickOutside(e)&&t.closePopup()}))}}])&&E(t.prototype,e),Object.defineProperty(t,"prototype",{writable:!1}),t;var t,e}();function w(t){return w="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(t){return typeof t}:function(t){return t&&"function"==typeof Symbol&&t.constructor===Symbol&&t!==Symbol.prototype?"symbol":typeof t},w(t)}function P(t,e){for(var n=0;n<e.length;n++){var r=e[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(t,_(r.key),r)}}function _(t){var e=function(t){if("object"!=w(t)||!t)return t;var e=t[Symbol.toPrimitive];if(void 0!==e){var n=e.call(t,"string");if("object"!=w(n))return n;throw new TypeError("@@toPrimitive must return a primitive value.")}return String(t)}(t);return"symbol"==w(e)?e:e+""}function j(){try{var t=!Boolean.prototype.valueOf.call(Reflect.construct(Boolean,[],(function(){})))}catch(t){}return(j=function(){return!!t})()}function C(t,e,n,r){var o=O(L(1&r?t.prototype:t),e,n);return 2&r&&"function"==typeof o?function(t){return o.apply(n,t)}:o}function O(){return O="undefined"!=typeof Reflect&&Reflect.get?Reflect.get.bind():function(t,e,n){var r=function(t,e){for(;!{}.hasOwnProperty.call(t,e)&&null!==(t=L(t)););return t}(t,e);if(r){var o=Object.getOwnPropertyDescriptor(r,e);return o.get?o.get.call(arguments.length<3?t:n):o.value}},O.apply(null,arguments)}function L(t){return L=Object.setPrototypeOf?Object.getPrototypeOf.bind():function(t){return t.__proto__||Object.getPrototypeOf(t)},L(t)}function T(t,e){return T=Object.setPrototypeOf?Object.setPrototypeOf.bind():function(t,e){return t.__proto__=e,t},T(t,e)}var I=function(t){function e(t,n){var r;return function(t,e){if(!(t instanceof e))throw new TypeError("Cannot call a class as a function")}(this,e),(r=function(t,e,n){return e=L(e),function(t,e){if(e&&("object"==w(e)||"function"==typeof e))return e;if(void 0!==e)throw new TypeError("Derived constructors may only return object or undefined");return function(t){if(void 0===t)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return t}(t)}(t,j()?Reflect.construct(e,n||[],L(t).constructor):e.apply(t,n))}(this,e,[t])).formElement=r.popupElement.querySelector(".form"),r.inputList=r.formElement.querySelectorAll(".form__input"),r.handleFormSubmit=n,r.buttonSubmit=r.formElement.querySelector(".form__submit"),r}return function(t,e){if("function"!=typeof e&&null!==e)throw new TypeError("Super expression must either be null or a function");t.prototype=Object.create(e&&e.prototype,{constructor:{value:t,writable:!0,configurable:!0}}),Object.defineProperty(t,"prototype",{writable:!1}),e&&T(t,e)}(e,t),n=e,(r=[{key:"getInputValues",value:function(){var t=this;return this.formValues={},this.inputList.forEach((function(e){t.formValues[e.name]=e.value})),this.formValues}},{key:"setEventListeners",value:function(){var t=this;C(e,"setEventListeners",this,3)([]),this.formElement.addEventListener("submit",(function(e){e.preventDefault(),t.handleFormSubmit(t.getInputValues()),t.closePopup()})),this.buttonSubmit.addEventListener("click",(function(){t.buttonSubmit.textContent="Cargando..."}))}},{key:"closePopup",value:function(){C(e,"closePopup",this,3)([]),this.formElement.reset()}}])&&P(n.prototype,r),Object.defineProperty(n,"prototype",{writable:!1}),n;var n,r}(g);function q(t){return q="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(t){return typeof t}:function(t){return t&&"function"==typeof Symbol&&t.constructor===Symbol&&t!==Symbol.prototype?"symbol":typeof t},q(t)}function U(t,e){for(var n=0;n<e.length;n++){var r=e[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(t,R(r.key),r)}}function R(t){var e=function(t){if("object"!=q(t)||!t)return t;var e=t[Symbol.toPrimitive];if(void 0!==e){var n=e.call(t,"string");if("object"!=q(n))return n;throw new TypeError("@@toPrimitive must return a primitive value.")}return String(t)}(t);return"symbol"==q(e)?e:e+""}function A(){try{var t=!Boolean.prototype.valueOf.call(Reflect.construct(Boolean,[],(function(){})))}catch(t){}return(A=function(){return!!t})()}function B(){return B="undefined"!=typeof Reflect&&Reflect.get?Reflect.get.bind():function(t,e,n){var r=function(t,e){for(;!{}.hasOwnProperty.call(t,e)&&null!==(t=x(t)););return t}(t,e);if(r){var o=Object.getOwnPropertyDescriptor(r,e);return o.get?o.get.call(arguments.length<3?t:n):o.value}},B.apply(null,arguments)}function x(t){return x=Object.setPrototypeOf?Object.getPrototypeOf.bind():function(t){return t.__proto__||Object.getPrototypeOf(t)},x(t)}function D(t,e){return D=Object.setPrototypeOf?Object.setPrototypeOf.bind():function(t,e){return t.__proto__=e,t},D(t,e)}var V=function(t){function e(t){var n;return function(t,e){if(!(t instanceof e))throw new TypeError("Cannot call a class as a function")}(this,e),(n=function(t,e,n){return e=x(e),function(t,e){if(e&&("object"==q(e)||"function"==typeof e))return e;if(void 0!==e)throw new TypeError("Derived constructors may only return object or undefined");return function(t){if(void 0===t)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return t}(t)}(t,A()?Reflect.construct(e,n||[],x(t).constructor):e.apply(t,n))}(this,e,[t])).imageElement=n.popupElement.querySelector(".popup__photo"),n.titleElement=n.popupElement.querySelector(".popup__photo-title"),n}return function(t,e){if("function"!=typeof e&&null!==e)throw new TypeError("Super expression must either be null or a function");t.prototype=Object.create(e&&e.prototype,{constructor:{value:t,writable:!0,configurable:!0}}),Object.defineProperty(t,"prototype",{writable:!1}),e&&D(t,e)}(e,t),n=e,r=[{key:"openPopup",value:function(t,n){var r,o,i;(r=e,o=this,"function"==typeof(i=B(x(1&3?r.prototype:r),"openPopup",o))?function(t){return i.apply(o,t)}:i)([]),this.titleElement.textContent=t,this.imageElement.src=n}}],r&&U(n.prototype,r),Object.defineProperty(n,"prototype",{writable:!1}),n;var n,r}(g);function F(t){return F="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(t){return typeof t}:function(t){return t&&"function"==typeof Symbol&&t.constructor===Symbol&&t!==Symbol.prototype?"symbol":typeof t},F(t)}function N(t,e){for(var n=0;n<e.length;n++){var r=e[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(t,J(r.key),r)}}function J(t){var e=function(t){if("object"!=F(t)||!t)return t;var e=t[Symbol.toPrimitive];if(void 0!==e){var n=e.call(t,"string");if("object"!=F(n))return n;throw new TypeError("@@toPrimitive must return a primitive value.")}return String(t)}(t);return"symbol"==F(e)?e:e+""}var G=function(){return t=function t(e){var n=e.name,r=e.about,o=e.avatar;!function(t,e){if(!(t instanceof e))throw new TypeError("Cannot call a class as a function")}(this,t),this.name=n,this.about=r,this.avatar=o},(e=[{key:"getUserInfo",value:function(){return{name:this.name.textContent,about:this.about.textContent,avatar:this.avatar.src}}},{key:"setUserInfo",value:function(t,e){this.name.textContent=t,this.about.textContent=e}},{key:"setUserAvatar",value:function(t){this.avatar.src=t}}])&&N(t.prototype,e),Object.defineProperty(t,"prototype",{writable:!1}),t;var t,e}();function H(t){return H="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(t){return typeof t}:function(t){return t&&"function"==typeof Symbol&&t.constructor===Symbol&&t!==Symbol.prototype?"symbol":typeof t},H(t)}function z(t,e){for(var n=0;n<e.length;n++){var r=e[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(t,M(r.key),r)}}function M(t){var e=function(t){if("object"!=H(t)||!t)return t;var e=t[Symbol.toPrimitive];if(void 0!==e){var n=e.call(t,"string");if("object"!=H(n))return n;throw new TypeError("@@toPrimitive must return a primitive value.")}return String(t)}(t);return"symbol"==H(e)?e:e+""}var K=function(){return t=function t(e,n){var r=e.items,o=e.renderer;!function(t,e){if(!(t instanceof e))throw new TypeError("Cannot call a class as a function")}(this,t),this.items=Array.isArray(r)?r:[],this.renderer=o,this.container=document.querySelector(n)},(e=[{key:"renderItems",value:function(){var t=this;this.items.forEach((function(e){t.renderer(e)}))}},{key:"addCard",value:function(t){this.container.prepend(t)}}])&&z(t.prototype,e),Object.defineProperty(t,"prototype",{writable:!1}),t;var t,e}();function Q(t){return Q="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(t){return typeof t}:function(t){return t&&"function"==typeof Symbol&&t.constructor===Symbol&&t!==Symbol.prototype?"symbol":typeof t},Q(t)}function W(t,e){for(var n=0;n<e.length;n++){var r=e[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(t,X(r.key),r)}}function X(t){var e=function(t){if("object"!=Q(t)||!t)return t;var e=t[Symbol.toPrimitive];if(void 0!==e){var n=e.call(t,"string");if("object"!=Q(n))return n;throw new TypeError("@@toPrimitive must return a primitive value.")}return String(t)}(t);return"symbol"==Q(e)?e:e+""}var Y=function(){return t=function t(e,n){!function(t,e){if(!(t instanceof e))throw new TypeError("Cannot call a class as a function")}(this,t),this.baseUrl=e,this.headers=n},(e=[{key:"getUser",value:function(){return fetch("".concat(this.baseUrl,"/users/me"),{method:"GET",headers:this.headers}).then((function(t){return t.ok?t.json():Promise.reject("error en la petición")}))}},{key:"editUser",value:function(t,e){return fetch("".concat(this.baseUrl,"/users/me"),{method:"PATCH",headers:this.headers,"Content-Type":"application/json",body:JSON.stringify({name:t,about:e})}).then((function(t){return t.ok?t.json():Promise.reject("error en la petición")}))}},{key:"editAvatar",value:function(t){return fetch("".concat(this.baseUrl,"/users/me/avatar"),{method:"PATCH",headers:this.headers,body:JSON.stringify({avatar:t})}).then((function(t){return t.ok?t.json():Promise.reject("error en la petición")}))}},{key:"getCards",value:function(){return fetch("".concat(this.baseUrl,"/cards"),{method:"GET",headers:this.headers}).then((function(t){return t.ok?t.json():Promise.reject("error en la petición")}))}},{key:"createCard",value:function(t,e){return fetch("".concat(this.baseUrl,"/cards"),{method:"POST",headers:this.headers,"Content-Type":"application/json",body:JSON.stringify({name:t,link:e})}).then((function(t){return t.ok?t.json():Promise.reject("error en la petición")}))}},{key:"deleteCard",value:function(t){return fetch("".concat(this.baseUrl,"/cards/").concat(t),{method:"DELETE",headers:this.headers}).then((function(t){return t.ok?t.json():Promise.reject("error en la petición")}))}},{key:"addLikeCard",value:function(t){return fetch("".concat(this.baseUrl,"/cards/").concat(t,"/likes"),{method:"PUT",headers:this.headers}).then((function(t){return t.ok?t.json():Promise.reject("error en la petición")}))}},{key:"removeLikeCard",value:function(t){return fetch("".concat(this.baseUrl,"/cards/").concat(t,"/likes"),{method:"DELETE",headers:this.headers}).then((function(t){return t.ok?t.json():Promise.reject("error en la petición")}))}}])&&W(t.prototype,e),Object.defineProperty(t,"prototype",{writable:!1}),t;var t,e}();function Z(t){return Z="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(t){return typeof t}:function(t){return t&&"function"==typeof Symbol&&t.constructor===Symbol&&t!==Symbol.prototype?"symbol":typeof t},Z(t)}function $(t,e){for(var n=0;n<e.length;n++){var r=e[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(t,tt(r.key),r)}}function tt(t){var e=function(t){if("object"!=Z(t)||!t)return t;var e=t[Symbol.toPrimitive];if(void 0!==e){var n=e.call(t,"string");if("object"!=Z(n))return n;throw new TypeError("@@toPrimitive must return a primitive value.")}return String(t)}(t);return"symbol"==Z(e)?e:e+""}function et(){try{var t=!Boolean.prototype.valueOf.call(Reflect.construct(Boolean,[],(function(){})))}catch(t){}return(et=function(){return!!t})()}function nt(){return nt="undefined"!=typeof Reflect&&Reflect.get?Reflect.get.bind():function(t,e,n){var r=function(t,e){for(;!{}.hasOwnProperty.call(t,e)&&null!==(t=rt(t)););return t}(t,e);if(r){var o=Object.getOwnPropertyDescriptor(r,e);return o.get?o.get.call(arguments.length<3?t:n):o.value}},nt.apply(null,arguments)}function rt(t){return rt=Object.setPrototypeOf?Object.getPrototypeOf.bind():function(t){return t.__proto__||Object.getPrototypeOf(t)},rt(t)}function ot(t,e){return ot=Object.setPrototypeOf?Object.setPrototypeOf.bind():function(t,e){return t.__proto__=e,t},ot(t,e)}var it=function(t){function e(t){var n;return function(t,e){if(!(t instanceof e))throw new TypeError("Cannot call a class as a function")}(this,e),(n=function(t,e,n){return e=rt(e),function(t,e){if(e&&("object"==Z(e)||"function"==typeof e))return e;if(void 0!==e)throw new TypeError("Derived constructors may only return object or undefined");return function(t){if(void 0===t)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return t}(t)}(t,et()?Reflect.construct(e,n||[],rt(t).constructor):e.apply(t,n))}(this,e,[t])).action=function(){},n}return function(t,e){if("function"!=typeof e&&null!==e)throw new TypeError("Super expression must either be null or a function");t.prototype=Object.create(e&&e.prototype,{constructor:{value:t,writable:!0,configurable:!0}}),Object.defineProperty(t,"prototype",{writable:!1}),e&&ot(t,e)}(e,t),n=e,r=[{key:"setAction",value:function(t){this.action=t}},{key:"setEventListeners",value:function(){var t,n,r,o=this;(t=e,n=this,"function"==typeof(r=nt(rt(1&3?t.prototype:t),"setEventListeners",n))?function(t){return r.apply(n,t)}:r)([]);var i=this.popupElement.querySelector("#buttonConfirmation");i?i.addEventListener("click",(function(){o.action()})):console.error("El botón de confirmación no se encontró en el popup.")}}],r&&$(n.prototype,r),Object.defineProperty(n,"prototype",{writable:!1}),n;var n,r}(g),ut=new Y("https://around.nomoreparties.co/v1/web-es-cohort-15",{authorization:"80b5e925-605c-4006-ba50-cc4527fb2e95","Content-Type":"application/json"}),ct=new G({name:f,about:p,avatar:y});ut.getUser().then((function(t){ct.setUserInfo(t.name,t.about,t.id),ct.setUserAvatar(t.avatar)})).catch((function(t){console.log(t)}));var at=new I("#popup-profile",(function(t){ut.editUser(t.name,t.about).then((function(t){ct.setUserInfo(t.name,t.about)})).catch((function(t){console.log(t)}))}));at.setEventListeners(),d.addEventListener("click",(function(){at.openPopup()}));var st=new I("#popup-avatar",(function(t){ut.editAvatar(t.avatar).then((function(t){ct.setUserAvatar(t.avatar)})).catch((function(t){console.log(t)}))}));st.setEventListeners(),b.addEventListener("click",(function(){st.openPopup()})),ut.getCards().then((function(t){lt.items=t,lt.renderItems()})).catch((function(t){console.log(t)}));var lt=new K({items:[],renderer:function(t){var e=new o(t,(function(){yt.openPopup(t.name,t.link)}),(function(t){ft.openPopup(),ft.setAction((function(){ut.deleteCard(t).then((function(){e.removeCard(),ft.closePopup()}))}))}),(function(t,n){n?ut.addLikeCard(t).then((function(t){e.likes=t.likes,e.showLikes()})):ut.removeLikeCard(t).then((function(t){e.likes=t.likes,e.showLikes()}))}),ct.userId);lt.addCard(e.setCard())}},".cards"),ft=new it("#popup-deleteCard");ft.setEventListeners();var pt=new I("#popup-card",(function(t){ut.createCard(t.title,t.link).then((function(t){var e=new o(t,(function(){yt.openPopup(t.name,t.link)}),(function(t){ft.openPopup(),ft.setAction((function(){ut.deleteCard(t).then((function(){e.removeCard(),ft.closePopup()}))}))}),(function(t,n){n?ut.addLikeCard(t).then((function(t){e.likes=t.likes,e.showLikes()})):ut.removeLikeCard(t).then((function(t){e.likes=t.likes,e.showLikes()}))}),ct.userId);lt.addCard(e.setCard()),pt.closePopup()}))}));pt.setEventListeners(),v.addEventListener("click",(function(){pt.openPopup()}));var yt=new V("#popup-image");yt.setEventListeners();var ht=new a(l,s),mt=new a(m,s),dt=new a(h,s);ht.enableValidation(),mt.enableValidation(),dt.enableValidation()}();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,